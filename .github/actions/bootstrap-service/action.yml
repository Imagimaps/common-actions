name: Bootstrap Service
description: Bootstrap a services infrastructure
inputs:
  service_name:
    description: The name of the service
    required: true
  environment:
    description: The environment to deploy the service to
    required: true
  environment_short_name:
    description: The short name of the environment
    required: true
  aws_account_id:
    description: The AWS account ID where the ECR repository is located
    required: true
  aws_role_arn:
    description: The ARN of the role which can create infra for the service
    required: true
  artifacts_aws_account_id:
    description: The AWS account ID where the ECR repository is located
    required: true
  artifacts_aws_role_arn:
    description: The ARN of the role which can create repositories in ECR and push images to them
    required: true
  aws_region:
    description: The region where the ECR repository is located
    required: false
    default: ap-southeast-2
  destroy:
    description: Whether to destroy the infrastructure. Values are 'true', 'soft' or 'false'
    required: false
    default: "false"
outputs:
  action_runtime:
    description: The duration of the action in seconds
    value: ${{ steps.end.outputs.runtime }}

runs:
  using: "composite"

  steps:
    - name: Initialise
      id: start
      shell: bash
      run: |
        echo "Bootstrapping Service [${{ inputs.service_name }}] in ${{ inputs.environment }} (${{ inputs.environment_short_name }}) environment"
        echo "ACTION_PATH=$(realpath ${{ github.action_path }})" >> $GITHUB_ENV

        valid_values=("true" "soft" "false")
        if [[ ! " ${valid_values[@]} " =~ " ${{ inputs.destroy }} " ]]; then
          echo "Invalid value for 'destroy' input: ${{ inputs.destroy }}. Allowed values are 'true', 'soft', or 'false'."
          exit 1
        fi
        echo "Running in destroy mode: ${{ inputs.destroy }}"

    - name: Bootstrap Service ECR
      if: ${{ inputs.destroy == 'false' }}
      uses: Imagimaps/common-actions/.github/actions/deploy-tf@main
      with:
        environment: artifacts
        tf_module_name: ecs-service
        tf_module_dir: ${{ env.ACTION_PATH }}/tf/ecr
        tf_workspace: service.${{ inputs.service_name }}
        tf_vars: |
          project=imagimaps
          service_name=${{ inputs.service_name }}
        aws_role_arn: ${{ inputs.artifacts_aws_role_arn }}
        aws_account_id: ${{ inputs.artifacts_aws_account_id }}
        aws_region: ${{ inputs.aws_region }}

    - name: Bootstrap Service ${{ inputs.environment }} Secrets
      if: ${{ inputs.destroy == 'false' }}
      uses: Imagimaps/common-actions/.github/actions/deploy-tf@main
      with:
        environment: ${{ inputs.environment }}
        tf_module_name: secrets
        tf_module_dir: ${{ env.ACTION_PATH }}/tf/secrets
        tf_workspace: service.${{ inputs.service_name }}
        tf_vars: |
          project=imagimaps
          service_name=${{ inputs.service_name }}
        aws_role_arn: ${{ inputs.aws_role_arn }}
        aws_account_id: ${{ inputs.aws_account_id }}
        aws_region: ${{ inputs.aws_region }}

    - name: Bootstrap Service DB
      if: ${{ inputs.destroy == 'false' }}
      uses: Imagimaps/common-actions/.github/actions/psql-client@main
      with:
        service: ${{ inputs.service_name }}
        environment: ${{ inputs.environment }}
        aws_role_arn: ${{ inputs.aws_role_arn }}
        aws_region: ${{ inputs.aws_region }}

    - name: Delete Service ${{ inputs.environment }} Secrets
      if: ${{ inputs.destroy == 'true' }}
      uses: Imagimaps/common-actions/.github/actions/deploy-tf@main
      with:
        environment: ${{ inputs.environment }}
        tf_module_name: secrets
        tf_module_dir: ${{ env.ACTION_PATH }}/tf/secrets
        tf_workspace: service.${{ inputs.service_name }}
        tf_vars: |
          project=imagimaps
          service_name=${{ inputs.service_name }}
        aws_role_arn: ${{ inputs.aws_role_arn }}
        aws_account_id: ${{ inputs.aws_account_id }}
        aws_region: ${{ inputs.aws_region }}
        destroy: true

    - name: Destroy Service ECR
      if: ${{ inputs.destroy != 'false' }}
      uses: Imagimaps/common-actions/.github/actions/deploy-tf@main
      with:
        environment: artifacts
        tf_module_name: ecs-service
        tf_module_dir: ${{ env.ACTION_PATH }}/tf/ecr
        tf_workspace: service.${{ inputs.service_name }}
        tf_vars: |
          project=imagimaps
          service_name=${{ inputs.service_name }}
        aws_role_arn: ${{ inputs.artifacts_aws_role_arn }}
        aws_account_id: ${{ inputs.artifacts_aws_account_id }}
        aws_region: ${{ inputs.aws_region }}
        destroy: true